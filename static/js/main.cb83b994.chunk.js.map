{"version":3,"sources":["components/Param/Param.module.css","components/Pult/Pult.module.css","components/Saloon/seat.module.css","components/Result/result.module.css","components/Saloon/row.module.css","components/Saloon/saloon.module.css","serviceWorker.js","redux/store.js","components/Saloon/seat.js","components/Saloon/row.js","components/Saloon/saloon.js","components/Param/Param.js","components/Pult/Pult.js","components/Result/result.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","constData","nRow","nCol","nPreferTea","nPreferCoffee","nPreferWater","prizeTea","prizeCoffee","prizeTeaCoffee","game","onClickHint","hintChecked","rerender","onClickSeat","ind","seat","seats","served","isQuestionTea","isQuestionCoffee","isQuestionTeaCoffee","given","prize","row","activeRow","nServedInRow","onClickStartGame","Number","this","nPreferTeaStr","nPreferCoffeeStr","nPreferWaterStr","nRowStr","nColStr","initialize","prizeTeaStr","prizeCoffeeStr","prizeTeaCoffeeStr","alert","onClickQuestionTea","onClickQuestionCoffee","onClickQuestionTeaCoffee","onChangeRow","body","onChangeCol","onChangePreferTea","onChangePreferCoffee","onChangePreferWater","onChangePrizeTea","nPrizeTeaStr","onChangePrizeCoffee","nPrizeCoffeeStr","onChangePrizeTeaCoffee","nPrizeTaeCoffeeStr","onClickAction","create","data","nSize","prefer","i","push","indexes","givenArray","length","Math","floor","random","splice","j","createSeat","col","index","getIndex","getSeatName","text","Seat","props","enabled","answer","s","answerNothing","answerWater","answerTrue","answerFalse","answerHalfTrue","clas","buttonGeneral","buttonEnabled","id","disabled","className","onClick","Row","cols","empty","Saloon","rows","e","target","value","Param","paramTitle","paramName","paramValue","onChange","startGame","buttonStartGame","type","checked","onClickAsk","getAskedIndex","Pult","textAsk","ask","statePult","pult","pultEmpty","stateTea","buttonActive","buttonNonActive","stateCoffee","stateTeaCoffee","title","buttonAsk","Result","forma","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cb83b994.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"startGame\":\"Param_startGame__2vUVF\",\"buttonStartGame\":\"Param_buttonStartGame__4WAjs\",\"paramTitle\":\"Param_paramTitle__3fuaC\",\"paramName\":\"Param_paramName__3G-T0\",\"paramValue\":\"Param_paramValue__G626v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Pult_title__1F3RO\",\"buttonGeneral\":\"Pult_buttonGeneral__37nyV\",\"buttonAsk\":\"Pult_buttonAsk__1y_4F\",\"buttonActive\":\"Pult_buttonActive__39Twi\",\"buttonNonActive\":\"Pult_buttonNonActive__3vfCd\",\"pultEmpty\":\"Pult_pultEmpty__1pnHT\",\"pult\":\"Pult_pult__23ICH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"seat_title__1GW2s\",\"buttonGeneral\":\"seat_buttonGeneral__4mPEd\",\"buttonEnabled\":\"seat_buttonEnabled__m7BAQ\",\"answerNothing\":\"seat_answerNothing__1awSq\",\"answerTrue\":\"seat_answerTrue__2ViZN\",\"answerFalse\":\"seat_answerFalse__2IJAR\",\"answerHalfTrue\":\"seat_answerHalfTrue__3s_MK\",\"answerWater\":\"seat_answerWater__1CsSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forma\":\"result_forma__2Npt2\",\"text\":\"result_text__3QxoJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"row_empty__24Z54\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isUnknown\":\"saloon_isUnknown__39XuB\",\"isBusy\":\"saloon_isBusy__1wy51\",\"isEmpty\":\"saloon_isEmpty__3-7OI\",\"isGoal\":\"saloon_isGoal__3qcxl\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\nlet constData = {\r\n    nRow: 6,\r\n    nCol: 4,\r\n\r\n    nPreferTea: 12,\r\n    nPreferCoffee: 4,\r\n    nPreferWater: 8,\r\n\r\n    prizeTea: 3,\r\n    prizeCoffee: 1,\r\n    prizeTeaCoffee: 0.5,\r\n}\r\n\r\nlet game = {\r\n    onClickHint () {\r\n        game.hintChecked = !game.hintChecked\r\n        game.rerender ()\r\n    },\r\n    onClickSeat (ind) {\r\n        let seat = game.seats[ind]\r\n        seat.served = true\r\n        seat.isQuestionTea = game.isQuestionTea\r\n        seat.isQuestionCoffee = game.isQuestionCoffee\r\n        seat.isQuestionTeaCoffee = game.isQuestionTeaCoffee\r\n\r\n        if (seat.given === 'Water') game.prize = 0\r\n        else if (seat.isQuestionTeaCoffee) game.prize += game.prizeTeaCoffee\r\n        else if (seat.isQuestionTea && seat.given === 'Tea') game.prize += game.prizeTea\r\n        else if (seat.isQuestionCoffee && seat.given === 'Coffee') game.prize += game.prizeCoffee\r\n        else game.prize += 0\r\n\r\n        if (seat.row !== game.activeRow) {\r\n            game.activeRow = seat.row\r\n            game.nServedInRow = 0\r\n        }\r\n        game.nServedInRow++\r\n        if (game.nServedInRow === game.nCol) {\r\n            game.nServedInRow = 0\r\n            game.activeRow++\r\n        }\r\n        game.rerender()\r\n    },\r\n    onClickStartGame() {\r\n        let nPreferTea = Number (this.nPreferTeaStr)\r\n        let nPreferCoffee = Number (this.nPreferCoffeeStr)\r\n        let nPreferWater = Number (this.nPreferWaterStr)\r\n        let nRow = Number (this.nRowStr)\r\n        let nCol = Number (this.nColStr)\r\n\r\n        if (nPreferTea + nPreferCoffee + nPreferWater !== nRow * nCol) {\r\n            alert ('Sum of prefers must be equal number of seats')\r\n            return\r\n        }\r\n        this.initialize ({\r\n            nRow: nRow,\r\n            nCol: nCol,\r\n\r\n            nPreferTea: nPreferTea,\r\n            nPreferCoffee: nPreferCoffee,\r\n            nPreferWater: nPreferWater,\r\n\r\n            prizeTea: this.prizeTeaStr,\r\n            prizeCoffee: this.prizeCoffeeStr,\r\n            prizeTeaCoffee: this.prizeTeaCoffeeStr,\r\n        })\r\n        this.rerender()\r\n    },\r\n\r\n    onClickQuestionTea() {\r\n        this.isQuestionTea = true;\r\n        this.isQuestionCoffee = false;\r\n        this.isQuestionTeaCoffee = false;\r\n        this.rerender()\r\n    },\r\n    onClickQuestionCoffee() {\r\n        this.isQuestionTea = false;\r\n        this.isQuestionCoffee = true;\r\n        this.isQuestionTeaCoffee = false;\r\n        this.rerender()\r\n    },\r\n    onClickQuestionTeaCoffee() {\r\n        this.isQuestionTea = false;\r\n        this.isQuestionCoffee = false;\r\n        this.isQuestionTeaCoffee = true;\r\n        this.rerender()\r\n    },\r\n\r\n    onChangeRow(body) {\r\n        this.nRowStr = body;\r\n        this.rerender()\r\n    },\r\n    onChangeCol(body) {\r\n        this.nColStr = body;\r\n        this.rerender()\r\n    },\r\n\r\n    onChangePreferTea(body) {\r\n        this.nPreferTeaStr = body;\r\n        this.rerender()\r\n    },\r\n    onChangePreferCoffee(body) {\r\n        this.nPreferCoffeeStr = body;\r\n        this.rerender()\r\n    },\r\n    onChangePreferWater(body) {\r\n        this.nPreferWaterStr = body;\r\n        this.rerender()\r\n    },\r\n\r\n    onChangePrizeTea(body) {\r\n        this.nPrizeTeaStr = body;\r\n        this.rerender()\r\n    },\r\n    onChangePrizeCoffee(body) {\r\n        this.nPrizeCoffeeStr = body;\r\n        this.rerender()\r\n    },\r\n    onChangePrizeTeaCoffee(body) {\r\n        this.nPrizeTaeCoffeeStr = body;\r\n        this.rerender()\r\n    },\r\n\r\n    rerender: function () {\r\n    },\r\n    onClickAction() {\r\n        this.rerender()\r\n    },\r\n\r\n    create(rerender) {\r\n        this.rerender = rerender\r\n        this.initialize(constData)\r\n    },\r\n\r\n    initialize(data) {\r\n        let nRow = data.nRow\r\n        let nCol = data.nCol\r\n\r\n        this.nRow = nRow\r\n        this.nCol = nCol\r\n\r\n        this.nSize = nRow * nCol\r\n        this.prize = 0\r\n        this.activeRow = 0\r\n        this.nServedInRow = 0\r\n\r\n        this.nPreferTea = data.nPreferTea\r\n        this.nPreferCoffee = data.nPreferCoffee\r\n        this.nPreferWater = data.nPreferWater\r\n\r\n        this.prizeTea = data.prizeTea\r\n        this.prizeCoffee = data.prizeCoffee\r\n        this.prizeTeaCoffee = data.prizeTeaCoffee\r\n\r\n        this.isQuestionTea = true\r\n        this.isQuestionCoffee = false\r\n        this.isQuestionTeaCoffee = false\r\n\r\n        this.hintChecked = false\r\n\r\n        //for Param Dialog\r\n        this.nRowStr = this.nRow\r\n        this.nColStr = this.nCol\r\n\r\n        this.nPreferTeaStr = this.nPreferTea\r\n        this.nPreferCoffeeStr = this.nPreferCoffee\r\n        this.nPreferWaterStr = this.nPreferWater\r\n\r\n        this.prizeTeaStr = this.prizeTea\r\n        this.prizeCoffeeStr = this.prizeCoffee\r\n        this.prizeTeaCoffeeStr = this.prizeTeaCoffee\r\n        //End Param Dialog\r\n\r\n        //Calculate random value for 'given' property\r\n        let prefer = []\r\n        for (let i = 0; i < this.nPreferTea; i++) prefer.push('Tea')\r\n        for (let i = 0; i < this.nPreferCoffee; i++) prefer.push('Coffee')\r\n        for (let i = 0; i < this.nPreferWater; i++) prefer.push('Water')\r\n        let indexes = []\r\n        for (let i = 0; i < this.nSize; i++) indexes.push(i)\r\n        let givenArray = []\r\n        while (indexes.length) {\r\n            let ind = Math.floor(Math.random() * indexes.length)\r\n            givenArray.push(prefer[indexes[ind]])\r\n            indexes.splice(ind, 1)\r\n        }\r\n\r\n        this.seats = []\r\n        for (let j = 0; j < nRow; j++) {\r\n            for (let i = 0; i < nCol; i++) {\r\n                let seat = this.createSeat(j, i, givenArray[j * nCol + i])\r\n                this.seats.push(seat)\r\n            }\r\n        }\r\n    },\r\n\r\n    createSeat(row, col, given) {\r\n        let index = this.getIndex(row, col)\r\n\r\n        return {\r\n            row: row,\r\n            col: col,\r\n            given: given,\r\n\r\n            index: index,       //index of cell in cells array\r\n            served: false,\r\n            isQuestionTea: false,\r\n            isQuestionCoffee: false,\r\n            isQuestionTeaCoffee: false\r\n        }\r\n    },\r\n\r\n    getIndex(j, i) {\r\n        return j * this.nCol + i;\r\n    },\r\n\r\n    getSeatName (ind) {\r\n        let row = Math.floor(ind / this.nCol)\r\n        let col = ind % this.nCol\r\n        let text = row + 1\r\n        switch (col) {\r\n            case 0:\r\n                text += 'A';\r\n                break\r\n            case 1:\r\n                text += 'B';\r\n                break\r\n            case 2:\r\n                text += 'C';\r\n                break\r\n            case 3:\r\n                text += 'D';\r\n                break\r\n            case 4:\r\n                text += 'E';\r\n                break\r\n            case 5:\r\n                text += 'F';\r\n                break\r\n            case 6:\r\n                text += 'G';\r\n                break\r\n            case 7:\r\n                text += 'H';\r\n                break\r\n            case 8:\r\n                text += 'I';\r\n                break\r\n            case 9:\r\n                text += 'J';\r\n                break\r\n        }\r\n        return text\r\n    }\r\n\r\n\r\n    }\r\n\r\nexport default game","import React from \"react\"\r\nimport s from './seat.module.css'\r\nimport game from \"../../redux/store\";\r\n\r\n\r\nconst Seat = (props) => {\r\n    let game = props.game\r\n    let row = props.row\r\n    let col = props.col\r\n\r\n    let ind = game.getIndex (row, col)\r\n    let activeRow = game.activeRow\r\n    let nCol = game.nCol\r\n    let nServedInRow = game.nServedInRow\r\n\r\n    let seat = game.seats[ind]\r\n    let given = seat.given\r\n    let served = seat.served\r\n    let isQuestionTea = seat.isQuestionTea\r\n    let isQuestionCoffee = seat.isQuestionCoffee\r\n    let isQuestionTeaCoffee = seat.isQuestionTeaCoffee\r\n    let index = seat.index\r\n\r\n    let onClickSeat = () => game.onClickSeat (ind)\r\n    //Text in button\r\n    let text = given\r\n    if (!game.hintChecked && !served) {\r\n        text = game.getSeatName (ind)\r\n    }\r\n\r\n    //Is button enabled for clicking\r\n    let enabled = (row === activeRow) ||\r\n                   (row === (activeRow+1) && (nCol-nServedInRow)<=2)\r\n\r\n    //BackgroundColor in dependence of answer\r\n    let answer = s.answerNothing\r\n    if (served) {\r\n        if (given === 'Water') {\r\n            answer = s.answerWater\r\n        }\r\n        else if (isQuestionTea && given === 'Tea' ||\r\n            isQuestionCoffee && given === 'Coffee') {\r\n            answer = s.answerTrue\r\n        }\r\n        else if (isQuestionTea && given === 'Coffee' ||\r\n            isQuestionCoffee && given === 'Tea') {\r\n            answer = s.answerFalse\r\n        }\r\n        else {\r\n            answer = s.answerHalfTrue\r\n        }\r\n    }\r\n\r\n    let clas = answer + ' ' + s.buttonGeneral\r\n    if (enabled) clas += ' ' + s.buttonEnabled\r\n    return (\r\n        <button id = {index} disabled={!enabled} className={clas} onClick={onClickSeat}>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\nexport default Seat\r\n","import React from \"react\"\r\nimport s from './row.module.css'\r\nimport game from \"../../redux/store\";\r\nimport Seat from \"./seat\";\r\n\r\nconst Row = (props) => {\r\n    let game = props.game\r\n    let row = props.row\r\n\r\n    let cols = []\r\n    for (let col = 0; col < game.nCol; col++) {\r\n        if (col && col%2 === 0) cols.push (<text className={s.empty}>pass</text>)\r\n        cols.push(<Seat game = {game} row = {row} col = {col}/>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {cols}\r\n        </div>\r\n    )\r\n}\r\nexport default Row\r\n\r\n","import React from \"react\"\r\nimport s from './saloon.module.css'\r\nimport game from \"../../redux/store\";\r\nimport Row from \"./row\";\r\n\r\nconst Saloon = (props) => {\r\n    let game = props.game\r\n    let nRow =  game.nRow\r\n\r\n    let rows = []\r\n    for (let row = 0; row < nRow; row++) {\r\n        rows[row] = <Row game = {game} row = {row}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {rows}\r\n        </div>\r\n    )\r\n}\r\nexport default Saloon\r\n\r\n","import React from \"react\"\r\nimport game from \"../../redux/store\";\r\nimport s from './Param.module.css';\r\n\r\nlet onClickStartGame = () => {\r\n    game.onClickStartGame()\r\n}\r\nlet onClickHint = () => {\r\n    game.onClickHint()\r\n}\r\nlet onChangeRow = (e) => {\r\n    game.onChangeRow(e.target.value)\r\n}\r\nlet onChangeCol = (e) => {\r\n    game.onChangeCol(e.target.value)\r\n}\r\n\r\nlet onChangePreferTea = (e) => {\r\n    game.onChangePreferTea(e.target.value)\r\n}\r\nlet onChangePreferCoffee = (e) => {\r\n    game.onChangePreferCoffee(e.target.value)\r\n}\r\nlet onChangePreferWater = (e) => {\r\n    game.onChangePreferWater(e.target.value)\r\n}\r\n\r\n\r\nlet onChangePrizeTea = (e) => {\r\n    game.onChangePrizeTea(e.target.value)\r\n}\r\nlet onChangePrizeCoffee = (e) => {\r\n    game.onChangePrizeCoffee(e.target.value)\r\n}\r\nlet onChangePrizeTeaCoffee = (e) => {\r\n    game.onChangePrizeTeaCoffee(e.target.value)\r\n}\r\n\r\nconst Param = (props) => {\r\n    return (\r\n        <div>\r\n            {/*Салон*/}\r\n            <div>\r\n                <text className={s.paramTitle}>Saloon</text>\r\n                <div>\r\n                    <text className={s.paramName}>Rows:</text>\r\n                    <input className={s.paramValue} value={game.nRowStr} onChange={onChangeRow}></input>\r\n\r\n                    <text className={s.paramName}>Seats in row:</text>\r\n                    <input className={s.paramValue} value={game.nColStr} onChange={onChangeCol}></input>\r\n                </div>\r\n            </div>\r\n\r\n            {/*Предпочтения*/}\r\n            <div>\r\n                <text className={s.paramTitle}>Prefer</text>\r\n                <div>\r\n                    <text className={s.paramName}>Tea:</text>\r\n                    <input className={s.paramValue} value={game.nPreferTeaStr} onChange={onChangePreferTea}></input>\r\n\r\n                    <text className={s.paramName}>Coffee:</text>\r\n                    <input className={s.paramValue} value={game.nPreferCoffeeStr}\r\n                           onChange={onChangePreferCoffee}></input>\r\n\r\n                    <text className={s.paramName}>Water:</text>\r\n                    <input className={s.paramValue} value={game.nPreferWaterStr} onChange={onChangePreferWater}></input>\r\n                </div>\r\n            </div>\r\n\r\n            {/*Призы*/}\r\n            <div>\r\n                <text className={s.paramTitle}>Prize</text>\r\n                <div>\r\n                    <text className={s.paramName}>Tea:</text>\r\n                    <input className={s.paramValue} value={game.prizeTea} onChange={onChangePrizeTea}></input>\r\n\r\n                    <text className={s.paramName}>Coffee:</text>\r\n                    <input className={s.paramValue} value={game.prizeCoffee} onChange={onChangePrizeCoffee}></input>\r\n\r\n                    <text className={s.paramName}>Tea-Coffee:</text>\r\n                    <input className={s.paramValue} value={game.prizeTeaCoffee}\r\n                           onChange={onChangePrizeTeaCoffee}></input>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/*Кнопка старта игры*/}\r\n            <div className={s.startGame}>\r\n                <button className={s.buttonStartGame} onClick={onClickStartGame}>Start Game</button>\r\n\r\n                {/*Подсказка*/}\r\n                <div>\r\n                    <text>Hint:</text>\r\n                    <input type=\"checkbox\" checked={game.hintChecked} onClick={onClickHint}></input>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Param\r\n","import React from \"react\"\r\nimport game from \"../../redux/store\";\r\nimport s from './Pult.module.css';\r\n\r\nlet onClickQuestionTea       = () => game.onClickQuestionTea ()\r\nlet onClickQuestionCoffee    = () => game.onClickQuestionCoffee ()\r\nlet onClickQuestionTeaCoffee = () => game.onClickQuestionTeaCoffee ()\r\nlet onClickAsk = () => game.onClickSeat (getAskedIndex ())\r\n\r\nlet getAskedIndex = () => {\r\n    //Find next served seat\r\n    let ind = game.nSize\r\n    while (ind)\r\n    {\r\n        if (game.seats[ind-1].served) break\r\n        ind--\r\n    }\r\n    //нет ли в последней строке необслуженных мест\r\n    if (ind === game.nSize) {\r\n        ind -= game.nCol\r\n        while (ind != game.nSize  && game.seats[ind].served) ind++\r\n    }\r\n    return ind\r\n}\r\nconst Pult = (props) => {\r\n    let textAsk = \"\";\r\n\r\n    //Find next served seat\r\n    let ind = getAskedIndex ();\r\n\r\n\r\n    let ask = game.isQuestionTea ? 'Tea?' : game.isQuestionCoffee ? 'Coffee?' : 'Tea-Coffee?'\r\n\r\n    let statePult = s.pult\r\n    if (ind < game.nSize) {\r\n        textAsk = `Ask ${game.getSeatName(ind)}: ${ask}`\r\n    }\r\n    else {\r\n        statePult = s.pultEmpty\r\n    }\r\n\r\n\r\n    let stateTea       = (game.isQuestionTea       ? s.buttonActive : s.buttonNonActive) + ' ' + s.buttonGeneral\r\n    let stateCoffee    = (game.isQuestionCoffee    ? s.buttonActive : s.buttonNonActive) + ' ' + s.buttonGeneral\r\n    let stateTeaCoffee = (game.isQuestionTeaCoffee ? s.buttonActive : s.buttonNonActive) + ' ' + s.buttonGeneral\r\n    return (\r\n        <div className={statePult}>\r\n            <div>\r\n                <text className={s.title}>Your Question:</text>\r\n            </div>\r\n\r\n            <div>\r\n            <button className={stateTea} onClick={onClickQuestionTea}>\r\n                Tea?\r\n            </button>\r\n\r\n            <button className={stateCoffee} onClick={onClickQuestionCoffee}>\r\n                Coffee?\r\n            </button>\r\n\r\n            <button className={stateTeaCoffee} onClick={onClickQuestionTeaCoffee}>\r\n                Tea-Coffee?\r\n            </button>\r\n            </div>\r\n\r\n            <div>\r\n                <button className={s.buttonAsk} onClick={onClickAsk}>\r\n                    {textAsk}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Pult","import React from \"react\"\r\nimport game from \"../../redux/store\";\r\nimport s from './result.module.css';\r\n\r\nconst Result = (props) => {\r\n    let text = `Your result: ${props.game.prize}`\r\n    return (\r\n        <div className={s.forma}>\r\n            <text className={s.text}>{text}</text>\r\n        </div>\r\n    )\r\n}\r\nexport default Result\r\n","import React from 'react';\nimport './App.css';\nimport Saloon from \"./components/Saloon/saloon\";\nimport Param from \"./components/Param/Param\";\nimport Pult from \"./components/Pult/Pult\";\nimport Result from \"./components/Result/result\";\n\nfunction App(props) {\n    return (\n        <div>\n            <Param game={props.game}/>\n            <Saloon game={props.game}/>\n            <Result game={props.game}/>\n            <Pult game = {props.game}/>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\n//npmimport './index.css';\nimport App from './App';\nimport game from \"./redux/store\";\n\nconst rerender = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App game={game}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n}\n\ngame.create(rerender);\nrerender();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}